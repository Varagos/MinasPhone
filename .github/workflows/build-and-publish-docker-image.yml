name: Build and Publish Docker Image

on:
  push:
    tags:
      - 'nestjs-server-v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Extract tag name
        id: tag-name
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - name: Extract version from tag name
        id: tag-version
        run: echo "::set-output name=version::$(echo ${{ steps.tag-name.outputs.tag }} | sed 's/nestjs-server-v//')"

      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./server
          push: true
          tags: varagos/minas-phone-api:${{ steps.tag-version.outputs.version }}

      - name: SSH and Deploy to VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VM_HOST }}
          username: ubuntu
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            echo "SSH connection established to $(hostname)"
            # Further deployment commands...
            # Deployment commands
            # E.g., pull the latest Docker image, restart services, etc.
            # Updating the docker-compose.yml with the new image tag
            sed -i 's/varagos\/minas-phone-api:.*/varagos\/minas-phone-api:${{ steps.tag-version.outputs.version }}/g' ./MinasPhone/server/docker-compose.yml

            # Navigate to the directory containing your docker-compose.yml
            cd ./MinasPhone/server
            echo "Current directory: $(pwd)"

            # Recreate the specific service with the new image
            docker-compose up -d --no-deps --build api
            # Use --force-recreate if needed
            # docker-compose up -d --no-deps --build --force-recreate api

            echo "Deployment completed"
