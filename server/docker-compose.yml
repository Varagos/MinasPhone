version: '3'

services:
  api:
    container_name: api
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    # env_file: .docker.dev.env
    ports:
      - 8080:8080
    networks:
      - app_network
    depends_on:
      - supertokens
    volumes:
      - type: bind
        source: ./database.sqlite
        target: /usr/src/app/database.sqlite
      - ./images:/usr/src/app/images

  db:
    image: 'postgres:latest'
    environment:
      POSTGRES_USER: supertokens_user
      POSTGRES_PASSWORD: somePassword
      POSTGRES_DB: supertokens
    ports:
      - 5432:5432
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'pg_isready -U supertokens_user']
      interval: 5s
      timeout: 5s
      retries: 5

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql
    depends_on:
      - db
    ports:
      - 3567:3567
    environment:
      POSTGRESQL_CONNECTION_URI: 'postgresql://supertokens_user:somePassword@db:5432/supertokens'
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app_network:
    driver: bridge
